// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Agent API
 * API of Diversion sync agent
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "JsonBody.h"
#include "WorkspaceSyncProgress.h"

namespace Diversion {
namespace AgentAPI {
namespace Model {



void WorkspaceSyncProgress::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("WorkspaceID")); WriteJsonValue(Writer, mWorkspaceID);
	Writer->WriteIdentifierPrefix(TEXT("FileStats")); WriteJsonValue(Writer, mFileStats);
	if (mLocalEventQueueSize.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LocalEventQueueSize")); WriteJsonValue(Writer, mLocalEventQueueSize.GetValue());
	}
	if (mCurrentSyncAction.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CurrentSyncAction")); WriteJsonValue(Writer, mCurrentSyncAction.GetValue());
	}
	if (mLastErr.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LastErr")); WriteJsonValue(Writer, mLastErr.GetValue());
	}
	if (mEnableLockRelease.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("EnableLockRelease")); WriteJsonValue(Writer, mEnableLockRelease.GetValue());
	}
	if (mErrorPaths.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ErrorPaths")); WriteJsonValue(Writer, mErrorPaths.GetValue());
	}
	if (mBlobTransferStatus.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("BlobTransferStatus")); WriteJsonValue(Writer, mBlobTransferStatus.GetValue());
	}
	if (mIsPaused.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("IsPaused")); WriteJsonValue(Writer, mIsPaused.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool WorkspaceSyncProgress::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{

	const TSharedPtr<FJsonObject>* InnerGeneratorOpenAPIObject;
	if (!JsonValue->TryGetObject(InnerGeneratorOpenAPIObject))
		return false;

	bool ParseSuccess = true;

    

	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("WorkspaceID"), mWorkspaceID);
	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("FileStats"), mFileStats);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("LocalEventQueueSize"), mLocalEventQueueSize);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("CurrentSyncAction"), mCurrentSyncAction);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("LastErr"), mLastErr);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("EnableLockRelease"), mEnableLockRelease);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("ErrorPaths"), mErrorPaths);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("BlobTransferStatus"), mBlobTransferStatus);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("IsPaused"), mIsPaused);


	return ParseSuccess;
}


}
}
}

