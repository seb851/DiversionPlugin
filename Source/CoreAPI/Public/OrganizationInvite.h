// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrganizationInvite.h
 *
 * 
 */
#pragma once


#include "ModelBase.h"

namespace Diversion {
namespace CoreAPI {
namespace Model {


/*
 * OrganizationInvite
 *
 * 
 */
class COREAPI_API OrganizationInvite
    : public Model
{
public:
    virtual ~OrganizationInvite() {}

	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	void WriteJson(JsonWriter& Writer) const override;


	/* Unique identifier for the organization invite */
	TOptional<FString> mId;

	/* ID of the organization */
	TOptional<FString> mOrganization_id;

	/* ID of the user who is inviting to the organization */
	TOptional<FString> mInviting_user_id;

	/* Email of the user who is invited to the organization */
	TOptional<FString> mInvited_email;

	enum class StatusEnum
	{
		PENDING,
		ACCEPTED,
		REJECTED,
  	};

	static FString EnumToString(const TOptional<StatusEnum>& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, TOptional<StatusEnum>& EnumValue);
	/* Status of the invite */
	TOptional<StatusEnum> mStatus;

	/* Date and time when the invite was created */
	TOptional<FDateTime> mCreated;

	/* Date and time when the invite expires */
	TOptional<FDateTime> mExpires;

};


}
}
}

