// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIAnalyticsApi.h"

#include "OpenAPIAnalyticsEvents.h"
#include "OpenAPIAnalyticsIdentify.h"

namespace CoreAPI
{

/* Update user traits

*/
class COREAPI_API OpenAPIAnalyticsApi::SrcHandlersAnalyticsIdentifyRequest : public Request
{
public:
    virtual ~SrcHandlersAnalyticsIdentifyRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIAnalyticsIdentify OpenAPIAnalyticsIdentify;
};

class COREAPI_API OpenAPIAnalyticsApi::SrcHandlersAnalyticsIdentifyResponse : public Response
{
public:
    virtual ~SrcHandlersAnalyticsIdentifyResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Ingest analytics events

*/
class COREAPI_API OpenAPIAnalyticsApi::SrcHandlersAnalyticsIngestRequest : public Request
{
public:
    virtual ~SrcHandlersAnalyticsIngestRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIAnalyticsEvents OpenAPIAnalyticsEvents;
};

class COREAPI_API OpenAPIAnalyticsApi::SrcHandlersAnalyticsIngestResponse : public Response
{
public:
    virtual ~SrcHandlersAnalyticsIngestResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Ingest analytics events without user context

*/
class COREAPI_API OpenAPIAnalyticsApi::SrcHandlersAnalyticsIngestAnonRequest : public Request
{
public:
    virtual ~SrcHandlersAnalyticsIngestAnonRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIAnalyticsEvents OpenAPIAnalyticsEvents;
	/* An anonymous user id */
	TOptional<FString> AnonymousId;
};

class COREAPI_API OpenAPIAnalyticsApi::SrcHandlersAnalyticsIngestAnonResponse : public Response
{
public:
    virtual ~SrcHandlersAnalyticsIngestAnonResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

}
