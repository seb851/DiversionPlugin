// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIRepositoryContentComparisonApi.h"

#include "OpenAPISrcHandlersv2TreeCompare200Response.h"

namespace CoreAPI
{

/* Compare two refs (commit/branch/workspace/tag/tree) in this repo. (Executed on secondary shard)

*/
class COREAPI_API OpenAPIRepositoryContentComparisonApi::SrcHandlersv2TreeCompareRequest : public Request
{
public:
    virtual ~SrcHandlersv2TreeCompareRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* The repo ID of the repository. Repo _name_ can be used instead of the ID, but usage of ID for permanent linking and API requests is preferred. */
	FString RepoId;
	/* A workspace_id, branch_id, commit_id or tag_id. If omitted, assuming the empty tree, unless other_id is a workspace, in which case base_id is assumed to be the workspace base ref.  */
	TOptional<FString> BaseId;
	/* A reference to a source version from which changes will be taken */
	TOptional<FString> OtherId;
};

class COREAPI_API OpenAPIRepositoryContentComparisonApi::SrcHandlersv2TreeCompareResponse : public Response
{
public:
    virtual ~SrcHandlersv2TreeCompareResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISrcHandlersv2TreeCompare200Response Content;
};

}
