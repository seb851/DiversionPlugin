// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Organization.h
 *
 * 
 */
#pragma once


#include "ModelBase.h"
#include "OrganizationInvite.h"
#include "OrganizationSubscription.h"
#include "OrganizationMember.h"

namespace Diversion {
namespace CoreAPI {
namespace Model {

class OrganizationSubscription;
class OrganizationMember;
class OrganizationInvite;

/*
 * Organization
 *
 * 
 */
class COREAPI_API Organization
    : public Model
{
public:
    virtual ~Organization() {}

	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	void WriteJson(JsonWriter& Writer) const override;


	/* Name of the organization */
	FString mName;

	/* Unique identifier for the organization */
	FString mId;

	/* Description of the organization */
	TOptional<FString> mDescription;

	/* ID of the user who owns the organization */
	FString mOwner_id;

	/* Total storage allocated to the organization */
	int32_t mTotal_storage = 0;

	/* List of subscriptions associated with the organization */
	TOptional<TArray<OrganizationSubscription>> mSubscriptions;

	/* List of members in the organization */
	TOptional<TArray<OrganizationMember>> mMembers;

	/* List of invites sent by the organization */
	TOptional<TArray<OrganizationInvite>> mInvites;

};


}
}
}

