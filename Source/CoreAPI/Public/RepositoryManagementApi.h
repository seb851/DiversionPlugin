// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "HTTPResult.h"
#include "DiversionHttpManager.h"
#include "Misc/TVariant.h"


#include "Error.h"
#include "Src_handlersv2_repo_list_all_200_response.h"

namespace Diversion {
namespace CoreAPI {

using namespace Diversion::CoreAPI::Model;

class COREAPI_API RepositoryManagementApi
{
public:
    explicit RepositoryManagementApi(TSharedPtr<DiversionHttp::FHttpRequestManager> ApiClient);
    virtual ~RepositoryManagementApi();


    /**
    * List user&#39;s repositories
    * @param owned If specified, filters repositories by ownership of the authenticated user. True would mean only repos they own will be returned. False would mean only repos they collaborate on will be returned. 
    * @return 
    */
    THTTPResult<TVariant<TSharedPtr<Src_handlersv2_repo_list_all_200_response>, TSharedPtr<Error>>> SrcHandlersv2RepoListAll(
        TOptional<bool> owned,
        const FString& Token,
        const TMap<FString, FString>& Headers,
		int ConnectionTimeoutSeconds, int RequestTimeoutSeconds) const;

    typedef FApiResponseDelegate<TVariant<TSharedPtr<Src_handlersv2_repo_list_all_200_response>, TSharedPtr<Error>>> Fsrc_handlersv2_repo_listAllDelegate;

protected:
    TSharedPtr<DiversionHttp::FHttpRequestManager> ApiClient;
};

}
}

