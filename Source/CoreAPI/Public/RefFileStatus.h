// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RefFileStatus.h
 *
 * Changes on some file in some ref
 */
#pragma once


#include "ModelBase.h"
#include "User.h"

namespace Diversion {
namespace CoreAPI {
namespace Model {

class User;

/*
 * RefFileStatus
 *
 * Changes on some file in some ref
 */
class COREAPI_API RefFileStatus
    : public Model
{
public:
    virtual ~RefFileStatus() {}

	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	void WriteJson(JsonWriter& Writer) const override;


	/* ID of the workspace, if applicable */
	TOptional<FString> mWorkspace_id;

	/* ID of the commit the ref is based on */
	FString mCommit_id;

	/* ID of the branch or of the branch on which the workspace is based on, if applicable */
	TOptional<FString> mBranch_id;

	/* Name of the branch, if applicable */
	TOptional<FString> mBranch_name;

	int32_t mStatus = 0;

	User mAuthor;

	/* Seconds since epoch UTC */
	TOptional<int64_t> mMtime;

};


}
}
}

