// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * HttpContent.h
 *
 * This class represents a single item of a multipart-formdata request.
 */

#pragma once



#include "CoreMinimal.h"
#include "Containers/UnrealString.h"
#include "Misc/Optional.h"
#include "ModelBase.h"

namespace Diversion {
namespace CoreAPI {
namespace Model {

class COREAPI_API HttpContent
{
public:
    HttpContent();
    virtual ~HttpContent();

    virtual FString GetContentDisposition() const;
    virtual void SetContentDisposition(const FString& Value);

    virtual FString GetName() const;
    virtual void SetName(const FString& Value);

    virtual FString GetFileName() const;
    virtual void SetFileName(const FString& Value);

    virtual FString GetContentType() const;
    virtual void SetContentType(const FString& Value);

    virtual TSharedPtr<TArray<uint8>> GetData() const;
    virtual void SetData(TSharedPtr<TArray<uint8>> Value);

    virtual void WriteTo(FArchive& Archive);

    virtual void WriteJson(JsonWriter& Writer) const;
    
    FString WriteToString() const;

    void FromString(const FString& InString);

    bool WriteToFile(const FString& FilePath) const;

    bool ReadFromFile(const FString& FilePath);

protected:
    FString ContentDisposition;
    FString Name;
    FString FileName;
    FString ContentType;
    TSharedPtr<TArray<uint8>> Data;
};

}
}
}
