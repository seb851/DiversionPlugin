// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace CoreAPI
{

class COREAPI_API OpenAPIRepositoryWorkspaceManipulationApi : public TSharedFromThis<OpenAPIRepositoryWorkspaceManipulationApi>
{
public:
	OpenAPIRepositoryWorkspaceManipulationApi();
	~OpenAPIRepositoryWorkspaceManipulationApi();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class SrcHandlersv2WorkspaceApplyClientUpdatesRequest;
	class SrcHandlersv2WorkspaceApplyClientUpdatesResponse;
	class SrcHandlersv2WorkspaceCheckoutRequest;
	class SrcHandlersv2WorkspaceCheckoutResponse;
	class SrcHandlersv2WorkspaceCherryPickRequest;
	class SrcHandlersv2WorkspaceCherryPickResponse;
	class SrcHandlersv2WorkspaceCreateWorkspaceRequest;
	class SrcHandlersv2WorkspaceCreateWorkspaceResponse;
	class SrcHandlersv2WorkspaceDeleteRequest;
	class SrcHandlersv2WorkspaceDeleteResponse;
	class SrcHandlersv2WorkspaceForwardWorkspaceRequest;
	class SrcHandlersv2WorkspaceForwardWorkspaceResponse;
	class SrcHandlersv2WorkspaceGetClientShouldUploadLogsRequest;
	class SrcHandlersv2WorkspaceGetClientShouldUploadLogsResponse;
	class SrcHandlersv2WorkspaceGetOtherStatusesRequest;
	class SrcHandlersv2WorkspaceGetOtherStatusesResponse;
	class SrcHandlersv2WorkspaceGetPreferencesRequest;
	class SrcHandlersv2WorkspaceGetPreferencesResponse;
	class SrcHandlersv2WorkspaceGetStatusRequest;
	class SrcHandlersv2WorkspaceGetStatusResponse;
	class SrcHandlersv2WorkspaceGetUploadingAgentsRequest;
	class SrcHandlersv2WorkspaceGetUploadingAgentsResponse;
	class SrcHandlersv2WorkspaceGetWorkspaceRequest;
	class SrcHandlersv2WorkspaceGetWorkspaceResponse;
	class SrcHandlersv2WorkspaceGetWorkspaceUpdatesRequest;
	class SrcHandlersv2WorkspaceGetWorkspaceUpdatesResponse;
	class SrcHandlersv2WorkspaceListAllWorkspacesRequest;
	class SrcHandlersv2WorkspaceListAllWorkspacesResponse;
	class SrcHandlersv2WorkspaceRenameWorkspaceRequest;
	class SrcHandlersv2WorkspaceRenameWorkspaceResponse;
	class SrcHandlersv2WorkspaceResetRequest;
	class SrcHandlersv2WorkspaceResetResponse;
	class SrcHandlersv2WorkspaceSetPreferencesRequest;
	class SrcHandlersv2WorkspaceSetPreferencesResponse;
	class SrcHandlersv2WorkspaceSetUploadingRequest;
	class SrcHandlersv2WorkspaceSetUploadingResponse;
	
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceApplyClientUpdatesDelegate, const SrcHandlersv2WorkspaceApplyClientUpdatesResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceCheckoutDelegate, const SrcHandlersv2WorkspaceCheckoutResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceCherryPickDelegate, const SrcHandlersv2WorkspaceCherryPickResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceCreateWorkspaceDelegate, const SrcHandlersv2WorkspaceCreateWorkspaceResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceDeleteDelegate, const SrcHandlersv2WorkspaceDeleteResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceForwardWorkspaceDelegate, const SrcHandlersv2WorkspaceForwardWorkspaceResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceGetClientShouldUploadLogsDelegate, const SrcHandlersv2WorkspaceGetClientShouldUploadLogsResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceGetOtherStatusesDelegate, const SrcHandlersv2WorkspaceGetOtherStatusesResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceGetPreferencesDelegate, const SrcHandlersv2WorkspaceGetPreferencesResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceGetStatusDelegate, const SrcHandlersv2WorkspaceGetStatusResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceGetUploadingAgentsDelegate, const SrcHandlersv2WorkspaceGetUploadingAgentsResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceGetWorkspaceDelegate, const SrcHandlersv2WorkspaceGetWorkspaceResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceGetWorkspaceUpdatesDelegate, const SrcHandlersv2WorkspaceGetWorkspaceUpdatesResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceListAllWorkspacesDelegate, const SrcHandlersv2WorkspaceListAllWorkspacesResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceRenameWorkspaceDelegate, const SrcHandlersv2WorkspaceRenameWorkspaceResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceResetDelegate, const SrcHandlersv2WorkspaceResetResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceSetPreferencesDelegate, const SrcHandlersv2WorkspaceSetPreferencesResponse&);
    DECLARE_DELEGATE_OneParam(FSrcHandlersv2WorkspaceSetUploadingDelegate, const SrcHandlersv2WorkspaceSetUploadingResponse&);
    
    FHttpRequestPtr SrcHandlersv2WorkspaceApplyClientUpdates(const SrcHandlersv2WorkspaceApplyClientUpdatesRequest& Request, const FSrcHandlersv2WorkspaceApplyClientUpdatesDelegate& Delegate = FSrcHandlersv2WorkspaceApplyClientUpdatesDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceCheckout(const SrcHandlersv2WorkspaceCheckoutRequest& Request, const FSrcHandlersv2WorkspaceCheckoutDelegate& Delegate = FSrcHandlersv2WorkspaceCheckoutDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceCherryPick(const SrcHandlersv2WorkspaceCherryPickRequest& Request, const FSrcHandlersv2WorkspaceCherryPickDelegate& Delegate = FSrcHandlersv2WorkspaceCherryPickDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceCreateWorkspace(const SrcHandlersv2WorkspaceCreateWorkspaceRequest& Request, const FSrcHandlersv2WorkspaceCreateWorkspaceDelegate& Delegate = FSrcHandlersv2WorkspaceCreateWorkspaceDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceDelete(const SrcHandlersv2WorkspaceDeleteRequest& Request, const FSrcHandlersv2WorkspaceDeleteDelegate& Delegate = FSrcHandlersv2WorkspaceDeleteDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceForwardWorkspace(const SrcHandlersv2WorkspaceForwardWorkspaceRequest& Request, const FSrcHandlersv2WorkspaceForwardWorkspaceDelegate& Delegate = FSrcHandlersv2WorkspaceForwardWorkspaceDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceGetClientShouldUploadLogs(const SrcHandlersv2WorkspaceGetClientShouldUploadLogsRequest& Request, const FSrcHandlersv2WorkspaceGetClientShouldUploadLogsDelegate& Delegate = FSrcHandlersv2WorkspaceGetClientShouldUploadLogsDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceGetOtherStatuses(const SrcHandlersv2WorkspaceGetOtherStatusesRequest& Request, const FSrcHandlersv2WorkspaceGetOtherStatusesDelegate& Delegate = FSrcHandlersv2WorkspaceGetOtherStatusesDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceGetPreferences(const SrcHandlersv2WorkspaceGetPreferencesRequest& Request, const FSrcHandlersv2WorkspaceGetPreferencesDelegate& Delegate = FSrcHandlersv2WorkspaceGetPreferencesDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceGetStatus(const SrcHandlersv2WorkspaceGetStatusRequest& Request, const FSrcHandlersv2WorkspaceGetStatusDelegate& Delegate = FSrcHandlersv2WorkspaceGetStatusDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceGetUploadingAgents(const SrcHandlersv2WorkspaceGetUploadingAgentsRequest& Request, const FSrcHandlersv2WorkspaceGetUploadingAgentsDelegate& Delegate = FSrcHandlersv2WorkspaceGetUploadingAgentsDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceGetWorkspace(const SrcHandlersv2WorkspaceGetWorkspaceRequest& Request, const FSrcHandlersv2WorkspaceGetWorkspaceDelegate& Delegate = FSrcHandlersv2WorkspaceGetWorkspaceDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceGetWorkspaceUpdates(const SrcHandlersv2WorkspaceGetWorkspaceUpdatesRequest& Request, const FSrcHandlersv2WorkspaceGetWorkspaceUpdatesDelegate& Delegate = FSrcHandlersv2WorkspaceGetWorkspaceUpdatesDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceListAllWorkspaces(const SrcHandlersv2WorkspaceListAllWorkspacesRequest& Request, const FSrcHandlersv2WorkspaceListAllWorkspacesDelegate& Delegate = FSrcHandlersv2WorkspaceListAllWorkspacesDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceRenameWorkspace(const SrcHandlersv2WorkspaceRenameWorkspaceRequest& Request, const FSrcHandlersv2WorkspaceRenameWorkspaceDelegate& Delegate = FSrcHandlersv2WorkspaceRenameWorkspaceDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceReset(const SrcHandlersv2WorkspaceResetRequest& Request, const FSrcHandlersv2WorkspaceResetDelegate& Delegate = FSrcHandlersv2WorkspaceResetDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceSetPreferences(const SrcHandlersv2WorkspaceSetPreferencesRequest& Request, const FSrcHandlersv2WorkspaceSetPreferencesDelegate& Delegate = FSrcHandlersv2WorkspaceSetPreferencesDelegate(), float InTimeoutSecs = -1.f) const;
    FHttpRequestPtr SrcHandlersv2WorkspaceSetUploading(const SrcHandlersv2WorkspaceSetUploadingRequest& Request, const FSrcHandlersv2WorkspaceSetUploadingDelegate& Delegate = FSrcHandlersv2WorkspaceSetUploadingDelegate(), float InTimeoutSecs = -1.f) const;
    
private:
    void OnSrcHandlersv2WorkspaceApplyClientUpdatesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceApplyClientUpdatesDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceCheckoutResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceCheckoutDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceCherryPickResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceCherryPickDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceCreateWorkspaceResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceCreateWorkspaceDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceDeleteResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceDeleteDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceForwardWorkspaceResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceForwardWorkspaceDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceGetClientShouldUploadLogsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceGetClientShouldUploadLogsDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceGetOtherStatusesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceGetOtherStatusesDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceGetPreferencesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceGetPreferencesDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceGetStatusResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceGetStatusDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceGetUploadingAgentsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceGetUploadingAgentsDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceGetWorkspaceResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceGetWorkspaceDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceGetWorkspaceUpdatesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceGetWorkspaceUpdatesDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceListAllWorkspacesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceListAllWorkspacesDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceRenameWorkspaceResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceRenameWorkspaceDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceResetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceResetDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceSetPreferencesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceSetPreferencesDelegate Delegate) const;
    void OnSrcHandlersv2WorkspaceSetUploadingResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSrcHandlersv2WorkspaceSetUploadingDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
