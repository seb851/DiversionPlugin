// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIRepositoryManagementApi.h"

#include "OpenAPIError.h"
#include "OpenAPIRepo.h"
#include "OpenAPISrcHandlersv2RepoListAll200Response.h"
#include "OpenAPISrcHandlersv2RepoPostRequest.h"

namespace CoreAPI
{

/* List user&#39;s repositories
 *
 * Get a list of repositories accessibly by the authenticated user
*/
class COREAPI_API OpenAPIRepositoryManagementApi::SrcHandlersv2RepoListAllRequest : public Request
{
public:
    virtual ~SrcHandlersv2RepoListAllRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* If specified, filters repositories by ownership of the authenticated user. True would mean only repos they own will be returned. False would mean only repos they collaborate on will be returned.  */
	TOptional<bool> Owned;
};

class COREAPI_API OpenAPIRepositoryManagementApi::SrcHandlersv2RepoListAllResponse : public Response
{
public:
    virtual ~SrcHandlersv2RepoListAllResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISrcHandlersv2RepoListAll200Response Content;
};

/* Create a repo
 *
 * Create an empty repo
*/
class COREAPI_API OpenAPIRepositoryManagementApi::SrcHandlersv2RepoPostRequest : public Request
{
public:
    virtual ~SrcHandlersv2RepoPostRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPISrcHandlersv2RepoPostRequest OpenAPISrcHandlersv2RepoPostRequest;
};

class COREAPI_API OpenAPIRepositoryManagementApi::SrcHandlersv2RepoPostResponse : public Response
{
public:
    virtual ~SrcHandlersv2RepoPostResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRepo Content;
};

}
