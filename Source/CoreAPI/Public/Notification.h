// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Notification.h
 *
 * 
 */
#pragma once


#include "ModelBase.h"

namespace Diversion {
namespace CoreAPI {
namespace Model {


/*
 * Notification
 *
 * 
 */
class COREAPI_API Notification
    : public Model
{
public:
    virtual ~Notification() {}

	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
	void WriteJson(JsonWriter& Writer) const override;


	FString mId;

	FString mMessage;

	enum class TypeEnum
	{
		TRIAL,
		SUCCESS,
		INFO,
		WARNING,
		ERROR,
  	};

	static FString EnumToString(const TypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, TypeEnum& EnumValue);
	/* Type of the notification, will be used to determine the styling of the notification on the FE */
	TypeEnum mType;

	/* If the notification can be dismissed by the user */
	bool mDismissible = false;

};


}
}
}

