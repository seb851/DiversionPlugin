// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPISrcHandlersv2MergeListOpenMerges200Response.h"

#include "CoreAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace CoreAPI
{

inline FString ToString(const OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum& Value)
{
	switch (Value)
	{
	case OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum::Merge:
		return TEXT("Merge");
	}

	UE_LOG(LogCoreAPI, Error, TEXT("Invalid OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPISrcHandlersv2MergeListOpenMerges200Response::EnumToString(const OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum& Value)
{
	static TMap<FString, OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum> StringToEnum = { 
		{ TEXT("Merge"), OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum::Merge }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPISrcHandlersv2MergeListOpenMerges200Response::EnumFromString(const FString& EnumAsString, OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPISrcHandlersv2MergeListOpenMerges200Response::ObjectEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPISrcHandlersv2MergeListOpenMerges200Response::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("object")); WriteJsonValue(Writer, Object);
	Writer->WriteIdentifierPrefix(TEXT("items")); WriteJsonValue(Writer, Items);
	Writer->WriteObjectEnd();
}

bool OpenAPISrcHandlersv2MergeListOpenMerges200Response::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* InnerGeneratorOpenAPIObject;
	if (!JsonValue->TryGetObject(InnerGeneratorOpenAPIObject))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("object"), Object);
	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("items"), Items);

	return ParseSuccess;
}

}
