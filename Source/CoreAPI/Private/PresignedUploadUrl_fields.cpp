// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "JsonBody.h"
#include "PresignedUploadUrl_fields.h"

namespace Diversion {
namespace CoreAPI {
namespace Model {



void PresignedUploadUrl_fields::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (mX_amz_checksum_algorithm.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("x-amz-checksum-algorithm")); WriteJsonValue(Writer, mX_amz_checksum_algorithm.GetValue());
	}
	if (mKey.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("key")); WriteJsonValue(Writer, mKey.GetValue());
	}
	if (mX_amz_algorithm.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("x-amz-algorithm")); WriteJsonValue(Writer, mX_amz_algorithm.GetValue());
	}
	if (mX_amz_credential.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("x-amz-credential")); WriteJsonValue(Writer, mX_amz_credential.GetValue());
	}
	if (mX_amz_date.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("x-amz-date")); WriteJsonValue(Writer, mX_amz_date.GetValue());
	}
	if (mPolicy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("policy")); WriteJsonValue(Writer, mPolicy.GetValue());
	}
	if (mX_amz_signature.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("x-amz-signature")); WriteJsonValue(Writer, mX_amz_signature.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool PresignedUploadUrl_fields::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{

	const TSharedPtr<FJsonObject>* InnerGeneratorOpenAPIObject;
	if (!JsonValue->TryGetObject(InnerGeneratorOpenAPIObject))
		return false;

	bool ParseSuccess = true;

    

    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("x-amz-checksum-algorithm"), mX_amz_checksum_algorithm);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("key"), mKey);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("x-amz-algorithm"), mX_amz_algorithm);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("x-amz-credential"), mX_amz_credential);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("x-amz-date"), mX_amz_date);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("policy"), mPolicy);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("x-amz-signature"), mX_amz_signature);


	return ParseSuccess;
}


}
}
}

