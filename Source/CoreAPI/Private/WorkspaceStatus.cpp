// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * The version of the OpenAPI document: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "JsonBody.h"
#include "WorkspaceStatus.h"

namespace Diversion {
namespace CoreAPI {
namespace Model {



void WorkspaceStatus::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("changed_items_count")); WriteJsonValue(Writer, mChanged_items_count);
	Writer->WriteIdentifierPrefix(TEXT("changed_files_count")); WriteJsonValue(Writer, mChanged_files_count);
	if (mIncomplete_result.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("incomplete_result")); WriteJsonValue(Writer, mIncomplete_result.GetValue());
	}
	if (mItems.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("items")); WriteJsonValue(Writer, mItems.GetValue());
	}
	if (mConflicts.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("conflicts")); WriteJsonValue(Writer, mConflicts.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool WorkspaceStatus::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{

	const TSharedPtr<FJsonObject>* InnerGeneratorOpenAPIObject;
	if (!JsonValue->TryGetObject(InnerGeneratorOpenAPIObject))
		return false;

	bool ParseSuccess = true;

    

	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("changed_items_count"), mChanged_items_count);
	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("changed_files_count"), mChanged_files_count);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("incomplete_result"), mIncomplete_result);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("items"), mItems);
    ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("conflicts"), mConflicts);


	return ParseSuccess;
}


}
}
}

