// Copyright 2024 Diversion Company, Inc. All Rights Reserved.
/**
 * Diversion Core API
 * Definition of the Core API used to access low-level functionality of Diversion
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIAsyncResponse.h"

#include "CoreAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace CoreAPI
{

void OpenAPIAsyncResponse::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("result_url")); WriteJsonValue(Writer, ResultUrl);
	Writer->WriteIdentifierPrefix(TEXT("timeout_sec")); WriteJsonValue(Writer, TimeoutSec);
	Writer->WriteIdentifierPrefix(TEXT("status")); WriteJsonValue(Writer, Status);
	Writer->WriteIdentifierPrefix(TEXT("ref_id")); WriteJsonValue(Writer, RefId);
	if (PollIntervalSec.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("poll_interval_sec")); WriteJsonValue(Writer, PollIntervalSec.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIAsyncResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* InnerGeneratorOpenAPIObject;
	if (!JsonValue->TryGetObject(InnerGeneratorOpenAPIObject))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("result_url"), ResultUrl);
	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("timeout_sec"), TimeoutSec);
	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("status"), Status);
	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("ref_id"), RefId);
	ParseSuccess &= TryGetJsonValue(*InnerGeneratorOpenAPIObject, TEXT("poll_interval_sec"), PollIntervalSec);

	return ParseSuccess;
}

}
